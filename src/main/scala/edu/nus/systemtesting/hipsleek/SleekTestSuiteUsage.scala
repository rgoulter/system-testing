package edu.nus.systemtesting.hipsleek

import java.io.PrintWriter
import java.nio.file.Path
import java.nio.file.Paths
import edu.nus.systemtesting.testsuite.TestSuite
import edu.nus.systemtesting.testsuite.TestSuiteResult
import edu.nus.systemtesting.TestCase
import edu.nus.systemtesting.TestCaseBuilder
import edu.nus.systemtesting.testsuite.TestSuiteUsage

/** Auto generated by [[SuiteGenerator]], and [[RunFastTests]].
  * Generated from revision 79da9697f0c2 of `run-fast-tests.pl`.
  */
class SleekTestSuiteUsage(
    binDir: Path,
    significantTime: Long,
    timeout: Int,
    revision : String,
    examplesDir: Path = Paths.get("examples/working/sleek"),
    command: Path = Paths.get("sleek"))
    extends TestSuiteUsage(revision, significantTime) with ConstructSleekTests {
  def test(cmd: Path,
           file: String,
           args: String,
           expectedOutput: String): SleekTestCase =
    (new TestCaseBuilder
       withBinaries binDir
       runCommand cmd
       withCorpus examplesDir
       onFile Paths.get(file)
       withArguments args
       checkAgainst expectedOutput
       timeoutAfter timeout)

  override def allTests =
      SleekTests ++
      SleekBarrTests ++
      SleekDfracTests ++
      SleekThreadsTests ++
      SleekVpermTests ++
      SleekFracpermTests ++
      SleekVeribsyncTests /* ++
      MusterrTests */

  val SleekTests = List(
    test(command, "sleek.slk", "", "Valid, Valid, Valid, Fail"),
    test(command, "cll-d.slk", "", "Valid"),
    test(command, "label-basic.slk", "--dis-eps", "Fail, Valid, Valid, Fail"),
    test(command, "label-dll.slk", "--dis-eps", "Valid, Valid, Valid, Valid"),
    test(command, "sleek1.slk", "", "Fail"),
    test(command, "sleek10.slk", "", "Valid, Fail"),
    test(command, "sleek2.slk", "", "Fail, Valid, Fail, Fail, Valid, Valid, Valid, Fail"),
    test(command, "sleek3.slk", "--elp", "Valid, Valid, Fail, Valid"),
    test(command, "sleek4.slk", "", "Valid, Valid"),
    test(command, "sleek6.slk", "", "Valid, Valid"),
    test(command, "sleek7.slk", "--dis-lem-gen", "Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Fail, Valid"),
    test(command, "sleek8.slk", "--dis-lem-gen", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Fail, Valid, Fail"),
    test(command, "sleek8.slk", "--elp", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Fail, Valid, Fail"),
    test(command, "sleek9.slk", "--elp", "Valid, Valid, Valid, Fail, Valid, Valid"),
    test(command, "sleek12-lend.slk", "", "Valid, Fail, Valid"),
    test(command, "sleek13-lend.slk", "", "Valid, Valid, Valid, Fail"),
    test(command, "sleek-err-exc.slk", "", "Fail, Fail, Fail, Fail"),
    test(command, "sleek-err-exc-bind.slk", "", "Fail, Fail, Fail, Valid"),
    test(command, "sleek-err-exc-flow.slk", "--efa-exc", "Fail, Fail, Fail, Fail, Fail, Fail, Valid, Fail, Fail, Fail"),
    test(command, "lst-under2.slk", "--inv-test", "Fail, ValidValid, Fail"),
    test(command, "data-holes.slk", "", "Fail, Valid, Valid"),
    test(command, "ll-under1a.slk", "--inv-test --use-baga", "Valid, Valid"),
    test(command, "ll-under1b.slk", "--inv-test --use-baga", "Fail, Valid"),
    test(command, "ll-under1c.slk", "--inv-test --use-baga", "Valid, Fail"),
    test(command, "ll-under1d.slk", "--inv-test --use-baga", "Valid, Valid"),
    test(command, "ll-under1e.slk", "--inv-test --use-baga", "Fail, Fail"),
    test(command, "ll-under1f.slk", "--inv-test --use-baga", "Valid, Fail"),
    test(command, "baga-test-eps.slk", "--eps", "Fail, Fail, Valid, Valid, Fail, Valid, Valid, Fail, Fail, Valid, Fail, Fail, Valid, Valid, Valid"),
    test(command, "baga-test.slk", "--use-baga", "Fail, Fail, Valid, Valid, Fail, Valid, Valid, Fail, Fail, Valid, Fail, Fail, Valid, Valid, Valid"),
    test(command, "baga-test-2.slk", "--dis-use-baga --dis-eps", "Fail, Fail, Valid, Valid, Fail, Valid, Valid, Fail, Fail, Valid, Fail, Fail, Valid, Valid, Valid"),
    test(command, "baga-test-2.slk", "--use-baga", "Fail, Fail, Valid, Valid, Fail, Valid, Valid, Fail, Fail, Valid, Fail, Fail, Valid, Valid, Valid"),
    test(command, "symb-diff.slk", "", "Valid, Valid, Valid"),
    test(command, "xpure3nodes.slk", "", "Valid, Valid"),
    test(command, "infer/app-inv.slk", "--inv --dis-eps", "Valid, Valid, Fail, Valid, Valid, Valid"),
    test(command, "infer/app-inv2.slk", "--inv --dis-eps", "Valid, Valid, Valid, Fail"),
    test(command, "infer/infer1.slk", "", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid"),
    test(command, "infer/infer2.slk", "", "Valid, Valid, Valid, Fail, Valid, Fail, Valid, Valid, Fail"),
    test(command, "infer/infer4.slk", "", "Fail, Fail, Valid"),
    test(command, "infer/infer5.slk", "", "Valid, Valid, Fail, Valid"),
    test(command, "infer/infer5a.slk", "", "Fail, Valid"),
    test(command, "infer/infer6.slk", "", "Valid"),
    test(command, "infer/infer7.slk", "", "Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Fail, Valid"),
    test(command, "infer/infer8.slk", "", "Valid, Valid, Valid, Fail, Fail, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail, Fail, Valid, Valid, Valid"),
    test(command, "infer/infer9.slk", "", "Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail, Valid, Valid"),
    test(command, "infer/infer10.slk", "", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail, Fail, Fail, Valid"),
    test(command, "infer/infer11.slk", "", "Fail"),
    test(command, "infer/infer12.slk", "", "Valid, Fail, Valid, Fail, Fail, Valid, Valid, Valid, Valid, Fail, Fail, Valid, Fail, Fail, Fail, Valid, Valid, Valid"),
    test(command, "infer/infer13.slk", "--sa-en-cont", "Valid, Valid, Valid, Valid, Valid"),
    test(command, "infer/infer14.slk", "--sa-en-pure-field", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "infer/infer15.slk", "", "Valid, Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "infer/infer16.slk", "", "Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "ann2.slk", "--imm --en-imm-inv --etcsu1", "Valid, Valid, Valid, Fail, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Fail, Fail, Valid, Fail, Valid, Fail, Fail, Valid, Valid, Valid, Fail, Fail"),
    test(command, "imm/imm1.slk", "--imm --etcsu1", "Fail, Valid, Valid, Valid, Valid, Valid"),
    test(command, "imm/imm2.slk", "--imm --etcsu1", "Fail, Valid, Fail, Valid, Fail"),
    test(command, "imm/imm3.slk", "--imm --etcsu1", "Fail, Fail, Valid, Valid, Valid"),
    test(command, "imm/imm4.slk", "--imm --etcsu1", "Valid, Fail"),
    test(command, "imm/imm8-instantiation.slk", "--etcsu1", "Valid, Valid, Fail, Valid, Valid, Fail, Fail, Valid, Fail, Valid, Fail, Valid, Fail, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail, Valid, Valid"),
    test(command, "imm/imm8-instantiation.slk", "--etcsu1 --field-imm", "Valid, Valid, Fail, Valid, Valid, Fail, Fail, Valid, Fail, Valid, Fail, Valid, Fail, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail, Valid, Valid"),
    test(command, "imm/imm9-early-inst.slk", "--etcsu1", "Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Fail, Fail, Valid, Fail"),
    test(command, "imm/imm9-early-inst.slk", "--etcsu1 --field-imm", "Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Fail, Fail, Valid, Fail"),
    test(command, "imm/imm-hard.slk", "--imm --eps", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "imm-field/sleek01.slk", "--field-imm --etcsu1", "Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail"),
    test(command, "imm-field/sleek02.slk", "--field-imm --etcsu1", "Fail, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail, Valid, Valid, Valid, Fail, Fail"),
    test(command, "imm-field/sleek03.slk", "--field-imm --etcsu1 --imm", "Valid, Fail, Valid, Valid, Fail, Valid, Valid, Fail, Valid, Valid, Fail"),
    test(command, "eps.slk", "--dis-imm", "Valid"),
    test(command, "imm-field/sleek05.slk", "--field-imm --etcsu1", "Valid, Fail, Fail, Fail, Fail, Fail, Valid, Valid, Valid"),
    test(command, "imm/norm/norm1.slk", "--en-imm-merge", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail"),
    test(command, "imm/norm/norm2.slk", "--en-imm-merge", "Valid, Valid, Valid, Valid, Valid"),
    test(command, "imm/norm/norm3.slk", "--en-imm-merge", "Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Fail, Fail, Valid"),
    test(command, "imm/norm/norm4.slk", "--en-imm-merge", "Valid, Valid, Valid, Fail, Fail"),
    test(command, "imm/norm/norm5.slk", "--en-imm-merge", "Valid, Valid, Fail"),
    test(command, "imm/norm/norm6.slk", "--en-imm-merge", "Valid, Valid, Fail"),
    test(command, "imm/norm/norm7.slk", "--field-imm --en-imm-merge", "Valid, Valid, Valid, Fail, Valid, Valid"),
    test(command, "imm/norm/norm9.slk", "--field-imm --en-imm-merge", "Valid, Fail"),
    test(command, "imm/norm/norm10.slk", "--field-imm --en-imm-merge", "Valid, Valid, Valid, Valid, Fail, Fail, Valid"),
    test(command, "imm/norm/field.slk", "--en-imm-merge", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail, Valid, Valid"),
    test(command, "classic/classic1.slk", "", "Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail"),
    test(command, "classic/classic1.slk", "--classic", "Fail, Valid, Valid, Valid, Fail, Valid, Fail, Fail"),
    test(command, "classic/classic1a.slk", "", "Fail, Valid, Fail, Valid, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail"),
    test(command, "classic/classic1b.slk", "", "Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "classic/classic2.slk", "", "Fail, Valid, Valid, Valid, Fail, Valid, Fail, Fail"),
    test(command, "classic/classic3.slk", "", "Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail"),
    test(command, "classic/classic4.slk", "", "Valid, Fail, Valid, Fail, Valid, Fail, Valid, Fail"),
    test(command, "inf-no-eps.slk", "--dsd --en-inf --dis-eps", "Fail, Fail, Valid, Valid"),
    test(command, "infinity.slk", "--dsd --en-inf --dis-eps", "Fail, Valid, Valid, Fail, Valid, Valid, Fail, Valid, Valid, Valid, Fail, Valid, Valid, Fail, Fail, Valid, Fail, Valid, Fail, Fail, Valid, Valid, Fail, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Fail, Valid, Fail, Valid, Valid, Valid, Fail, Fail, Valid, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail, Valid, Valid, Valid, Valid, Valid"),
    test(command, "inflem.slk", "--en-inf --elp --dis-eps --dis-inv-baga", "Valid, Fail, Valid"),
    test(command, "lemmas/sort2.slk", "--elp --dis-lem-gen", "Fail, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Fail, Valid"),
    test(command, "lemmas/lseg.slk", "--elp --dis-lem-gen", "Valid, Valid, Valid, Valid"),
    test(command, "lemmas/lseg1.slk", "--elp --dis-lem-gen", "Valid"),
    test(command, "lemmas/rlseg.slk", "--elp --dis-lem-gen --old-empty-to-conseq", "Valid, Valid, Valid"),
    test(command, "lemmas/lemma-fold.slk", "--elp", "Valid, Valid, Fail, Valid, Fail, Valid, Fail"),
    test(command, "lemmas/rd-lem-1.slk", "--elp --dis-lem-gen", "Fail, Valid"),
    test(command, "lemmas/rd-lem-2.slk", "", "Fail"),
    test(command, "lemmas/app-tail.slk", "--elp", "Valid, Valid, Valid, Fail"),
    test(command, "lemmas/lseg_case.slk", "--elp --dis-lem-gen", "Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "lemmas/ll.slk", "--elp", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail"),
    test(command, "lemmas/ll_tail.slk", "--elp", "Valid, ValidValid, Valid"),
    test(command, "lemmas/nlseg3.slk", "", "Valid, Valid"),
    test(command, "lemmas/nlseg4e.slk", "--elp", "Valid, Valid"),
    test(command, "lemmas/nlseg4e1.slk", "--dis-imm", "Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid"),
    test(command, "lemmas/sll_tailL.slk", "--elp", "Valid, Valid"),
    test(command, "lemmas/dseg-new.slk", "--elp --dis-lem-gen --old-empty-to-conseq", "Valid, Fail, Valid"),
    test(command, "lemmas/dseg1.slk", "--elp --dis-lem-gen", "Valid, Fail"),
    test(command, "lemmas/odd-lseg.slk", "--elp --dis-lem-gen --dis-eps", "Valid, Valid, Fail, Valid, Valid, Fail, Valid, Fail, Valid"),
    test(command, "lemmas/lseg_complex.slk", "--elp --dis-lem-gen --old-empty-to-conseq", "Valid, Valid, ValidValid, Valid, Fail"),
    test(command, "fracperm/split_simple.slk", "--en-para -perm fperm -tp redlog --old-norm-w-coerc", "Valid, Fail, Valid, Fail, Fail, Valid, Valid, Valid"),
    test(command, "fracperm/split-combine.slk", "--en-para -perm fperm -tp redlog --old-norm-w-coerc", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "vperm/vperm.slk", "--ann-vp", "Valid, Valid, Fail, Valid, Valid, Fail, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Fail, Valid"),
    test(command, "veribsync/bperm-split-combine.slk", "--en-para -perm bperm -tp redlog --old-norm-w-coerc", "Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "veribsync/barrier-static.slk", "--en-para -perm bperm -tp redlog --old-norm-w-coerc", "Valid, Valid, Valid, Valid, Valid"),
    test(command, "veribsync/barrier-dynamic2.slk", "--en-para -perm bperm -tp redlog --old-norm-w-coerc", "Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Fail, Valid, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "threads/thrd1.slk", "--en-para --en-thrd-resource -tp redlog", "Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail, Valid, Fail, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "conchip/threads.slk", "-tp parahip", "Valid, Valid, Valid"),
    test(command, "conchip/latch.slk", "-tp parahip", "Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail")
  )

  val SleekBarrTests = List(
    test(command, "../tree_shares/barrier.slk", "--eps --dis-field-imm --dis-precise-xpure -perm dperm", ""),
    test(command, "../tree_shares/barrier3.slk", "--eps --dis-field-imm --dis-precise-xpure -perm dperm", "")
  )

  val SleekDfracTests = List(
    test(command, "../tree_shares/fractionals.slk", "--eps --dis-field-imm -perm dperm", "Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail"),
    test(command, "../tree_shares/barrier2.slk", "--eps --dis-field-imm -perm dperm", "Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail"),
    test(command, "../tree_shares/fractions.slk", "--eps --dis-field-imm -perm dperm", "Valid, Fail, Valid, Fail, Fail, Fail, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail, Valid, Fail, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail")
  )

  val SleekThreadsTests = List(
  )

  val SleekVpermTests = List(
    test(command, "vperm/vperm2.slk", "--ann-vp", "Valid, Valid, Fail")
  )

  val SleekFracpermTests = List(
    test(command, "fracperm/sleek.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Valid, Fail"),
    test(command, "fracperm/sleek1.slk", "--en-para -perm fperm -tp redlog", "Fail"),
    test(command, "fracperm/sleek10.slk", "--en-para -perm fperm -tp redlog", "Valid, Fail"),
    test(command, "fracperm/sleek2.slk", "--en-para -perm fperm -tp redlog", "Fail, Valid, Fail, Fail, Valid, Valid, Valid, Fail"),
    test(command, "fracperm/sleek3.slk", "--en-para -perm fperm -tp redlog", "Valid, Fail, Valid"),
    test(command, "fracperm/sleek4.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid"),
    test(command, "fracperm/sleek6.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid"),
    test(command, "fracperm/sleek7.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Fail, Valid"),
    test(command, "fracperm/sleek8.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Fail, Valid, Fail"),
    test(command, "fracperm/sleek9.slk", "--en-para -perm fperm -tp redlog", "Valid, Fail, Valid, Valid"),
    test(command, "fracperm/norm1.slk", "--en-para -perm fperm -tp redlog", "Fail, Valid, Fail, Valid"),
    test(command, "fracperm/norm3.slk", "--en-para -perm fperm -tp redlog", "Fail, Valid, Valid, Valid, Valid, Valid, Valid, Fail"),
    test(command, "fracperm/norm4.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Valid"),
    test(command, "fracperm/uni_vars.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Fail"),
    test(command, "fracperm/frac1.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid"),
    test(command, "fracperm/frac2.slk", "--en-para -perm fperm -tp redlog", "Valid, Fail, Valid, Valid, Valid, Fail, Fail, Valid, Valid, Fail, Valid, Fail, Fail"),
    test(command, "fracperm/frac3.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Fail, Fail, Fail, Fail"),
    test(command, "fracperm/split_simple.slk", "--en-para -perm fperm -tp redlog", "Valid, Fail, Valid, Fail, Fail, Valid, Valid, Valid"),
    test(command, "fracperm/combine_data.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid"),
    test(command, "fracperm/combine_simple.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Fail, Valid, Valid, Valid, Valid"),
    test(command, "fracperm/split-combine.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "fracperm/combine2.slk", "--en-para -perm fperm -tp redlog", "Valid, Valid, Valid, Valid")
  )

  val SleekVeribsyncTests = List(
    test(command, "veribsync/bperm1.slk", "--en-para -perm bperm -tp redlog", "Valid, Fail, Valid, Valid, Valid, Valid, Valid, Fail"),
    test(command, "veribsync/bperm-split.slk", "--en-para -perm bperm -tp redlog", "Valid, Valid, Fail, Valid, Valid, Fail, Valid, Valid"),
    test(command, "veribsync/bperm-combine.slk", "--en-para -perm bperm -tp redlog", "Valid, Valid, Valid, Valid"),
    test(command, "veribsync/bperm-split-combine.slk", "--en-para -perm bperm -tp redlog", "Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "veribsync/barrier1.slk", "--en-para -perm bperm -tp redlog", "Valid, Fail, Valid, Valid, Valid, Valid, Valid, Fail"),
    test(command, "veribsync/barrier-split.slk", "--en-para -perm bperm -tp redlog", "Valid, Valid, Fail, Valid, Valid, Fail, Valid"),
    test(command, "veribsync/barrier-combine.slk", "--en-para -perm bperm -tp redlog", "Valid, Valid, Valid, Valid"),
    test(command, "veribsync/barrier-sep.slk", "--en-para -perm bperm -tp redlog", "Valid, Valid, Valid"),
    test(command, "veribsync/barrier-static.slk", "--en-para -perm bperm -tp redlog", "Valid, Valid, Valid, Valid, Valid"),
    test(command, "veribsync/barrier-dynamic.slk", "--en-para -perm bperm -tp redlog", "Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Fail, Valid, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid"),
    test(command, "veribsync/barrier-dynamic2.slk", "--en-para -perm bperm -tp redlog", "Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Valid, Fail, Valid, Valid, Valid, Fail, Fail, Valid, Valid, Valid, Fail, Valid, Valid, Valid, Valid, Valid, Valid")
  )

  val MusterrTests = List(
    test(command, "err1.slk", "", "must, may, must, must, may, must, may, must, must, Valid, may, must"),
    test(command, "err1-exc.slk", "--efa-exc", "must, may, must, must, may, must, may, must, must, Valid, may, must"),
    test(command, "err2.slk", "", "must, may, must, must, must, may, must, must, may, may, may, must, must, must, may, may, must, must, must, must, must, Valid, may, Valid, must, must, must, must, Valid, may, may, may, must, must"),
    test(command, "err3.slk", "", "must, must, must, must, must, must, may, must, must"),
    test(command, "err4.slk", "", "must, Valid, must, must, must, Valid, Valid, must, must, must, Valid, must, Valid, must, must, must, must, Valid"),
    test(command, "err5.slk", "", "may, must, Valid, may, may, may, must, may, Valid, must, must, must, must, may, Valid, may, must, Valid, must, must"),
    test(command, "err6.slk", "", "must, Valid, may, must, must, must"),
    test(command, "err7.slk", "", "Valid, must, must, must, must, Valid, must, Valid, must, must"),
    test(command, "err9.slk", "", "Valid, Valid, must, may, Valid, Valid, must, may")
  )


  // Duplicate in sleek: (sleek13-lend.slk, ) w/ Valid, Valid, Valid, Fail
  // Duplicate: (threads/thrd1.slk, --en-para --en-thrd-resource -tp redlog) w/ Valid, Valid, Valid, Valid, Valid, Valid, Fail, Valid, Fail, Valid, Fail, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid, Valid
  // Duplicate: (vperm/vperm.slk, --ann-vp) w/ Valid, Valid, Fail, Valid, Valid, Fail, Fail, Fail, Valid, Valid, Valid, Valid, Valid, Fail, Valid
}
