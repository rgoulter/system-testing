// Translated / adapted from the older HipTestSuiteUsage.
suite(name, pkg, revision, examplesDir, command, testSets, warnings) ::= <<
package <pkg>

import java.io.PrintWriter
import java.nio.file.Path
import java.nio.file.Paths
import edu.nus.systemtesting.PreparedSystem
import edu.nus.systemtesting.Testable
import edu.nus.systemtesting.TestCase
import edu.nus.systemtesting.TestCaseBuilder
import edu.nus.systemtesting.TestCaseConfiguration
import edu.nus.systemtesting.testsuite.TestSuite
import edu.nus.systemtesting.testsuite.TestSuiteResult
import edu.nus.systemtesting.testsuite.TestSuiteUsage

/** Auto generated by [[SuiteGenerator]], and [[RunFastTests]].
  * Generated from revision <revision> of `run-fast-tests.pl`.
  */
class <name>TestSuiteUsage(
    projDir: Path,
    significantTime: Long,
    timeout: Int,
    revision : String,
    examplesDir: Path = Paths.get("<examplesDir>"))
    extends TestSuiteUsage(revision, significantTime) {
  val usagePrepRepo = PreparedSystem(binDir, examplesDir)
  val usageConf = TestCaseConfiguration(timeout)

  def construct(tc: Testable): <name>TestCase =
    <name>TestCase.constructTestCase(usagePrepRepo, tc, usageConf)

  override def allTests =
    <name>TestSuiteUsage.allTestable map construct
}

object <name>TestSuiteUsage(
  val command = Paths.get("sleek")

  def test(cmd: Path,
           file: String,
           args: String,
           expectedOutput: String): TestCaseBuilder =
    TestCaseBuilder(cmd, Paths.get("<examplesDir>", file), args, expectedOutput)

  override def allTestable =
    <testSets:{tset|<tset.name>Tests}; separator=" ++\n" >

<! Now generate the set of tests for each test set. !>
  <testSets:{tset|val <tset.name>Tests = List(
  <tset.tests:{t|test(command, "<t.filename>", "<t.args>", "<t.expectStr>")}; separator=",\n" >
)}; separator="\n\n" >


<! Warnings / remarks about the rendered output !>
  <warnings:{warning|// <warning>}; separator="\n" >
}
>>
